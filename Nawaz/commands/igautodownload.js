module.exports = {
  config: {
    name: "linkAutoDownload",
    version: "1.3.1",
    hasPermssion: 0,
    credits: "Nawaz Boss",
    description: "Automatically detects links in messages and downloads the file.",
    commandCategory: "Utilities",
    usages: "",
    cooldowns: 5,
  },
  
  run: async function ({ events, args }) {},

  handleEvent: async function ({ api, event }) {
    const axios = require("axios");
    const fs = require("fs-extra");
    const { alldown } = require("arif-babu-media");

    const content = event.body ? event.body.trim() : "";
    if (!content.startsWith("https://")) return;

    try {
      api.setMessageReaction("тП│", event.messageID, () => {}, true);

      // рд▓рд┐рдВрдХ рд╕реЗ рд╡реАрдбрд┐рдпреЛ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рдиреЗ рдХреА рдХреЛрд╢рд┐рд╢
      const data = await alldown(content);
      if (!data || !data.data) {
        return api.sendMessage("тЪа рд╡реАрдбрд┐рдпреЛ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛ рдЖрдИ!", event.threadID, event.messageID);
      }

      const { high, title } = data.data;
      const filePath = `${__dirname}/cache/auto.mp4`;

      // рд╡реАрдбрд┐рдпреЛ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рдирд╛
      const videoBuffer = (await axios.get(high, { responseType: "arraybuffer" })).data;
      fs.writeFileSync(filePath, Buffer.from(videoBuffer, "utf-8"));

      api.setMessageReaction("ЁЯУе", event.messageID, () => {}, true);

      return api.sendMessage(
        {
          body: `ЁЯОм **рд╡реАрдбрд┐рдпреЛ рдбрд╛рдЙрдирд▓реЛрдб рд╣реЛ рдЧрдпрд╛!**\n\nЁЯУМ **рдирд╛рдо:** ${title}\nЁЯСС **Powered by Nawaz Boss**\n\nтЬЕ **рдЗрд╕реНрддреЗрдорд╛рд▓ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░!**`,
          attachment: fs.createReadStream(filePath),
        },
        event.threadID,
        event.messageID
      );
    } catch (error) {
      console.error("тЫФ рдбрд╛рдЙрдирд▓реЛрдб рдПрд░рд░:", error);
      return api.sendMessage("тЭМ рдбрд╛рдЙрдирд▓реЛрдб рдлреЗрд▓! рдХреБрдЫ рдЧрдбрд╝рдмрдбрд╝ рд╣реЛ рдЧрдИред", event.threadID, event.messageID);
    }
  },
};