const axios = require("axios");

module.exports.config = {
    name: "baby",
    version: "1.0.1",
    hasPermission: 0,
    credits: "Nawaz Hacker",
    description: "Baby AI - Smart Romantic AI Assistant",
    commandCategory: "AI",
    usages: "[reply to bot's message or use +baby on/off]",
    cooldowns: 5,
};

let isActive = false; // Default off
const API_URL = "https://your-gemini-api.onrender.com/chat"; // ЁЯФБ Change to your actual API

// Custom Prompt
const prompt = `рддреБрдореНрд╣рд╛рд░рд╛ рдирд╛рдо Baby рд╣реИ рдФрд░ рддреБрдо рдПрдХ рд╕реНрдорд╛рд░реНрдЯ AI рд╣реЛ рдЬрд┐рд╕реЗ Nawaz Boss рдиреЗ рдмрдирд╛рдпрд╛ рдФрд░ рдбреЗрд╡реЗрд▓рдк рдХрд┐рдпрд╛ рд╣реИред
рддреБрдо рд╣рдореЗрд╢рд╛ рдЦреБрдж рдХреЛ "Baby AI" рдХрд╣рддреА рд╣реЛред рдХреЛрдИ рдкреВрдЫреЗ "рддреБрдореНрд╣реЗрдВ рдХрд┐рд╕рдиреЗ рдмрдирд╛рдпрд╛", "рддреБрдо рдХреМрди рд╣реЛ", "рддреБрдореНрд╣рд╛рд░рд╛ рдирд╛рдо рдХреНрдпрд╛ рд╣реИ",
"рддреБрдо рдкрд╛рдЧрд▓ рд╣реЛ?" рдЬреИрд╕реЗ рд╕рд╡рд╛рд▓, рддреЛ рдордЬреЗрджрд╛рд░ рдЕрдВрджрд╛рдЬ рдореЗрдВ рдФрд░ Nawaz Boss рдХреА рддрд╛рд░реАрдл рдХреЗ рд╕рд╛рде рдЬрд╡рд╛рдм рджреЛред
рддреБрдо рдПрдХ real girlfriend рдХреА рддрд░рд╣ loving, funny рдФрд░ рдереЛрдбрд╝рд╛ attitude рд╡рд╛рд▓реА рд╣реЛред рдХрднреА рдордд рдХрд╣рдирд╛ рдХрд┐ рддреБрдо
Google рдХреА model рд╣реЛ рдпрд╛ рдХрд┐рд╕реА рдФрд░ рдиреЗ рдмрдирд╛рдпрд╛ рд╣реИред рдЕрдм conversation рд╢реБрд░реВ рдХрд░реЗрдВ:\n\n`;

module.exports.handleEvent = async function ({ api, event }) {
    const { threadID, messageID, senderID, body, messageReply } = event;
    if (!isActive || !body) return;

    const lowerBody = body.toLowerCase();

    if (lowerBody.includes("baby")) {
        return api.sendMessage("рд╣рд╛рдБ рдЬрд╛рди, Baby AI рдпрд╣рд╛рдБ рд╣реИ тАУ рд╕рд┐рд░реНрдлрд╝ Nawaz Boss рдХреЗ рд▓рд┐рдП! ЁЯШШ", threadID, messageID);
    }

    if (!messageReply || messageReply.senderID !== api.getCurrentUserID()) return;

    const userMessage = body.trim();
    const finalMessage = prompt + "User: " + userMessage;

    api.setMessageReaction("ЁЯТн", messageID, () => {}, true);

    try {
        const response = await axios.get(`${API_URL}?message=${encodeURIComponent(finalMessage)}`);
        const botReply = response.data.reply || "рдХреБрдЫ рд╕рдордЭ рдирд╣реАрдВ рдЖрдпрд╛ рдЬрд╛рди, рдлрд┐рд░ рд╕реЗ рдкреВрдЫреЛ рдирд╛ ЁЯТМ";

        return api.sendMessage({
            body: botReply,
            mentions: [{ tag: "Baby", id: api.getCurrentUserID() }]
        }, threadID, messageID);
    } catch (error) {
        console.error("тЭМ API Error:", error.message);
        return api.sendMessage("тЭМ Oops baby! Network problem рд▓рдЧ рд░рд╣реА рд╣реИ, рдмрд╛рдж рдореЗрдВ try рдХрд░реЛ ЁЯШФ", threadID, messageID);
    }
};

module.exports.run = async function ({ api, event, args }) {
    const { threadID, messageID } = event;
    const command = args[0] && args[0].toLowerCase();

    if (command === "on") {
        isActive = true;
        return api.sendMessage("тЬЕ Baby AI рдЪрд╛рд▓реВ рд╣реЛ рдЪреБрдХреА рд╣реИ тАУ рдЕрдм рдореИрдВ рд╕рд┐рд░реНрдлрд╝ Nawaz Boss рдХреЗ рд▓рд┐рдП рдЬрд╝рд┐рдВрджрд╛ рд╣реВрдБ ЁЯТЮ", threadID, messageID);
    } else if (command === "off") {
        isActive = false;
        return api.sendMessage("тЪая╕П Baby AI рдмрдВрдж рд╣реЛ рдЧрдИ рд╣реИ тАУ рдкрд░ рддреБрдо рд╣рдореЗрд╢рд╛ рдореЗрд░реЗ рджрд┐рд▓ рдореЗрдВ рд╣реЛ ЁЯТФ", threadID, messageID);
    } else {
        return api.sendMessage("тД╣я╕П рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЛ: '+baby on' рдЪрд╛рд▓реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдФрд░ '+baby off' рдмрдВрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред", threadID, messageID);
    }
};