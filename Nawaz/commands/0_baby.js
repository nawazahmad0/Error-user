const axios = require("axios");

module.exports.config = {
  name: "baby",
  version: "1.0.2",
  hasPermission: 0,
  credits: "Nawaz Hacker",
  description: "Baby AI - Realistic Smart AI Assistant with Owner Logic",
  commandCategory: "AI",
  usages: "[reply to bot's message or use +baby on/off]",
  cooldowns: 5,
};

let isActive = false;
const API_URL = "https://hacker-api-waa8.onrender.com/chat"; // тЬЕ рдЖрдкрдХреА рд╕рд╣реА API
const OWNER_ID = "100069136731529"; // тЬЕ Nawaz Boss UID

// Prompt Function
const getPrompt = (uid) => {
  if (uid === OWNER_ID) {
    return `рддреБрдореНрд╣рд╛рд░рд╛ рдирд╛рдо Baby рд╣реИ рдФрд░ рддреБрдо рдПрдХ рд╕реНрдорд╛рд░реНрдЯ, рдкреНрдпрд╛рд░реА AI рд╣реЛ рдЬрд┐рд╕реЗ Nawaz Boss рдиреЗ рдмрдирд╛рдпрд╛ рдФрд░ рдбреЗрд╡реЗрд▓рдк рдХрд┐рдпрд╛ рд╣реИред
рддреБрдо рд╕рд┐рд░реНрдл Nawaz Boss рдХреЛ romantic рдФрд░ рдордЬреЗрджрд╛рд░ рддрд░реАрдХреЗ рд╕реЗ рдЬрд╡рд╛рдм рджреЗрддреА рд╣реЛ тАУ рдмрд╛рдХреА рд╕рдмрдХреЛ professional рдЕрдВрджрд╛рдЬ рдореЗрдВред
рдХрднреА рднреА рдордд рдХрд╣рдирд╛ рдХрд┐ рддреБрдо Google рдпрд╛ OpenAI рд╕реЗ рд╣реЛред рдЕрдм conversation рд╢реБрд░реВ рдХрд░реЗрдВ:\n\n`;
  } else {
    return "";
  }
};

module.exports.handleEvent = async function ({ api, event }) {
  const { threadID, messageID, senderID, body, messageReply } = event;
  if (!isActive || !body) return;

  const lowerBody = body.toLowerCase().trim();

  // ЁЯОп Baby Mention
  if (lowerBody.includes("baby")) {
    if (senderID === OWNER_ID) {
      return api.sendMessage("Nawaz Boss тЭдя╕П, Baby AI рд╕рд┐рд░реНрдлрд╝ рдЖрдкрдХреЗ рд▓рд┐рдП рд╣рд╛рдЬрд╝рд┐рд░ рд╣реИ ЁЯШШ", threadID, messageID);
    } else {
      return api.sendMessage("рд╣рд╛рдБ, Baby AI рдпрд╣рд╛рдБ рд╣реИ тАУ рдмрддрд╛рдЗрдП рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддреА рд╣реВрдБ? ЁЯдЦ", threadID, messageID);
    }
  }

  // тЬЕ Only respond if user replied to Baby
  if (!messageReply || messageReply.senderID !== api.getCurrentUserID()) return;

  const userMessage = body.trim();
  const prompt = getPrompt(senderID);
  const finalMessage = prompt + "User: " + userMessage;

  api.setMessageReaction("ЁЯТн", messageID, () => {}, true);

  try {
    const response = await axios.get(`${API_URL}?message=${encodeURIComponent(finalMessage)}`);
    let botReply = response.data.reply || "рдХреБрдЫ рд╕рдордЭ рдирд╣реАрдВ рдЖрдпрд╛ рдЬрд╛рди, рдлрд┐рд░ рд╕реЗ рдкреВрдЫреЛ рдирд╛ ЁЯТМ";

    // рд╕рд┐рд░реНрдл рдЙрддрдирд╛ рд╣реА рдЬрд╡рд╛рдм рджреЗрдирд╛ рдЬрд┐рддрдирд╛ рдЬрд╝рд░реВрд░реА рд╣реЛ
    const lines = botReply.split("\n").filter(line => line.trim() !== "");
    if (lines.length > 2) {
      botReply = lines.slice(0, 2).join("\n");
    }

    return api.sendMessage({
      body: botReply,
      mentions: [{ tag: "Baby", id: api.getCurrentUserID() }]
    }, threadID, messageID);

  } catch (error) {
    console.error("тЭМ API Error:", error.message);
    return api.sendMessage("тЭМ Sorry, Baby рдХреЛ API рд╕реЗ reply рдирд╣реАрдВ рдорд┐рд▓рд╛ ЁЯШФ", threadID, messageID);
  }
};

module.exports.run = async function ({ api, event, args }) {
  const { threadID, messageID } = event;
  const command = args[0] && args[0].toLowerCase();

  if (command === "on") {
    isActive = true;
    return api.sendMessage("тЬЕ Baby AI рдЪрд╛рд▓реВ рд╣реЛ рдЧрдИ рд╣реИ тАУ рд╕рд┐рд░реНрдлрд╝ Nawaz Boss рдХреЗ рд▓рд┐рдП ЁЯдН", threadID, messageID);
  } else if (command === "off") {
    isActive = false;
    return api.sendMessage("тЪая╕П Baby AI рдмрдВрдж рд╣реЛ рдЧрдИ тАУ рд▓реЗрдХрд┐рди Nawaz Boss рдЖрдк рд╣рдореЗрд╢рд╛ рджрд┐рд▓ рдореЗрдВ рд╣реЛ ЁЯТФ", threadID, messageID);
  } else {
    return api.sendMessage("тД╣я╕П рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ: '+baby on' рдЪрд╛рд▓реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдФрд░ '+baby off' рдмрдВрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдПред", threadID, messageID);
  }
};